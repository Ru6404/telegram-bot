from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters
import asyncio
import requests

class QuantumTelegramBot:
    def __init__(self, token):
        self.token = token
        self.app = Application.builder().token(token).build()
        self.setup_handlers()
    
    def setup_handlers(self):
        self.app.add_handler(CommandHandler("start", self.start))
        self.app.add_handler(CommandHandler("status", self.status))
        self.app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, self.handle_message))
    
    async def start(self, update: Update, context):
        await update.message.reply_text("üöÄ Quantum System 2025 Bot –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /status –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã")
    
    async def status(self, update: Update, context):
        try:
            response = requests.get("http://localhost:8000/health", timeout=5)
            status_data = response.json()
            await update.message.reply_text(f"‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç:\n{status_data}")
        except:
            await update.message.reply_text("‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
    
    async def handle_message(self, update: Update, context):
        text = update.message.text
        await update.message.reply_text(f"üîÆ –ü—Ä–∏–Ω—è—Ç–æ: {text}\n\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ /status –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã")
    
    async def run(self):
        print("ü§ñ Telegram Bot –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
        await self.app.run_polling()

# –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–® –¢–û–ö–ï–ù!
TOKEN = "–í–ê–®_–¢–û–ö–ï–ù_–ó–î–ï–°–¨"

if __name__ == "__main__":
    bot = QuantumTelegramBot(TOKEN)
    asyncio.run(bot.run())
