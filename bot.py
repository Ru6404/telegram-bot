from aiogram import Bot, Dispatcher, types
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup
from aiogram.utils import executor
import asyncio

# -------------------------------
# –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç BotFather
# -------------------------------
TELEGRAM_TOKEN = "8253068855:AAFPNJke9PYju90RgZe4ZOKOuuMSJNAs0X8"

bot = Bot(token=TELEGRAM_TOKEN)
dp = Dispatcher(bot)

# =======================
# –ö–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É
# =======================
keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
keyboard.add(KeyboardButton("üìã –ó–∞—è–≤–∫–∏"))
keyboard.add(KeyboardButton("üë• –ö–ª–∏–µ–Ω—Ç—ã"))
keyboard.add(KeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"))
keyboard.add(KeyboardButton("‚úÖ –ü—Ä–∏–Ω—è—Ç—å"), KeyboardButton("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å"))

# =======================
# –ö–æ–º–∞–Ω–¥—ã
# =======================
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! ‚úÖ", reply_markup=keyboard)

# =======================
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
# =======================
@dp.message_handler(lambda message: message.text in ["üìã –ó–∞—è–≤–∫–∏", "üë• –ö–ª–∏–µ–Ω—Ç—ã", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                                                    "‚úÖ –ü—Ä–∏–Ω—è—Ç—å", "‚ùå –û—Ç–∫–∞–∑–∞—Ç—å"])
async def button_handler(message: types.Message):
    if message.text == "üìã –ó–∞—è–≤–∫–∏":
        await message.answer("–°–ø–∏—Å–æ–∫ –∑–∞—è–≤–æ–∫...")
    elif message.text == "üë• –ö–ª–∏–µ–Ω—Ç—ã":
        await message.answer("–°–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤...")
    elif message.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
        await message.answer("–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞...")
    elif message.text == "‚úÖ –ü—Ä–∏–Ω—è—Ç—å":
        await message.answer("–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞ ‚úÖ")
    elif message.text == "‚ùå –û—Ç–∫–∞–∑–∞—Ç—å":
        await message.answer("–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ ‚ùå")

# =======================
# –ó–∞–ø—É—Å–∫
# =======================
if __name__ == "__main__":
    executor.start_polling(dp, skip_updates=True)
