import os
import logging
import asyncio
import re
import math
from datetime import datetime, timedelta
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, ContextTypes, CommandHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "8253068855:AAFPNJke9PYju90RgZe4ZOKOuuMSJNAs0X8"

async def process_message(message: str, user_id: int) -> str:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    message_lower = message.lower().strip()
    
    # 0. –ö–æ–º–∞–Ω–¥–∞ /start
    if message_lower in ['/start', 'start', '–Ω–∞—á–∞—Ç—å']:
        return "üöÄ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!* –Ø –≤–∞—à —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫!\n\n" \
               "üìã *–ß—Ç–æ —è —É–º–µ—é:*\n" \
               "‚Ä¢ üßÆ –†–µ—à–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã\n" \
               "‚Ä¢ üïê –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Ä–µ–º—è –∏ –¥–∞—Ç—É\n" \
               "‚Ä¢ üìä –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–µ–ª–∏—á–∏–Ω—ã\n" \
               "‚Ä¢ ‚ùì –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n" \
               "‚Ä¢ üòä –û–±—â–∞—Ç—å—Å—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –±–µ—Å–µ–¥—É\n\n" \
               "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ!"
    
    # 1. –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
    math_patterns = [
        r'(\d+[\s]*[+\-*/√ó√∑^][\s]*\d+)',
        r'–ø–æ—Å—á–∏—Ç–∞–π\s+(.+)',
        r'—Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç\s+(.+)',
        r'–≤—ã—á–∏—Å–ª–∏\s+(.+)',
        r'—Ä–µ—à–∏\s+(.+)',
    ]
    
    for pattern in math_patterns:
        match = re.search(pattern, message_lower, re.IGNORECASE)
        if match:
            try:
                if pattern.startswith(r'(\d+'):
                    math_expr = match.group(0)
                else:
                    math_expr = match.group(1)
                
                math_expr = re.sub(r'[^\d+\-*/().^‚àöœÄe]', '', math_expr)
                math_expr = math_expr.replace('√ó', '*').replace('√∑', '/').replace('^', '**')
                
                safe_chars = set('0123456789+-*/().^‚àöœÄe ')
                if all(char in safe_chars for char in math_expr):
                    math_expr = math_expr.replace('œÄ', str(math.pi)).replace('e', str(math.e))
                    
                    if '‚àö' in math_expr:
                        math_expr = math_expr.replace('‚àö', 'math.sqrt')
                    
                    result = eval(math_expr, {"__builtins__": None}, {"math": math})
                    return f"üßÆ *–†–µ–∑—É–ª—å—Ç–∞—Ç:* {math_expr} = {result}"
                else:
                    return "‚ùå *–û—à–∏–±–∫–∞:* –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ"
                    
            except ZeroDivisionError:
                return "‚ùå *–û—à–∏–±–∫–∞:* –î–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ"
            except Exception as e:
                return f"‚ùå *–û—à–∏–±–∫–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è:* {str(e)}"
    
    # 2. –í—Ä–µ–º—è –∏ –¥–∞—Ç–∞
    time_patterns = [
        '–≤—Ä–µ–º—è', '–∫–æ—Ç–æ—Ä—ã–π —á–∞—Å', '—Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏', '—Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è',
        '–¥–∞—Ç–∞', '–∫–∞–∫–æ–µ —á–∏—Å–ª–æ', '–∫–∞–∫–æ–π –¥–µ–Ω—å', '—Ç–µ–∫—É—â–∞—è –¥–∞—Ç–∞',
        '–¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏', '–∫–∞–∫–æ–π –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏'
    ]
    
    if any(pattern in message_lower for pattern in time_patterns):
        now = datetime.now()
        current_time = now.strftime("%H:%M:%S")
        current_date = now.strftime("%d.%m.%Y")
        weekday = now.strftime("%A")
        weekday_ru = {
            'Monday': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫', 'Tuesday': '–í—Ç–æ—Ä–Ω–∏–∫', 
            'Wednesday': '–°—Ä–µ–¥–∞', 'Thursday': '–ß–µ—Ç–≤–µ—Ä–≥',
            'Friday': '–ü—è—Ç–Ω–∏—Ü–∞', 'Saturday': '–°—É–±–±–æ—Ç–∞', 
            'Sunday': '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ'
        }
        
        return f"üìÖ *–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è:*\n" \
               f"‚Ä¢ üïê –í—Ä–µ–º—è: {current_time}\n" \
               f"‚Ä¢ üìÖ –î–∞—Ç–∞: {current_date}\n" \
               f"‚Ä¢ üìÜ –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: {weekday_ru.get(weekday, weekday)}"
    
    # 3. –í–æ–ø—Ä–æ—Å—ã –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
    capability_patterns = [
        '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å', '—Ç–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', '–∫–æ–º–∞–Ω–¥—ã', 'help', '–ø–æ–º–æ—â—å',
        '–∫–∞–∫–∏–µ –∑–∞–¥–∞—á–∏', '—á—Ç–æ –º–æ–∂–µ—à—å', '—Ñ—É–Ω–∫—Ü–∏–∏', '—É–º–µ–Ω–∏—è', '–Ω–∞–≤—ã–∫–∏',
        '—á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å', '—Ç–≤–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏', '—á—Ç–æ —É–º–µ–µ—à—å', '—Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ',
        '—á—Ç–æ —Ç—ã –¥–µ–ª–∞–µ—à—å', '—á–µ–º –º–æ–∂–µ—à—å –ø–æ–º–æ—á—å', '—á–µ–º –ø–æ–º–æ—á—å', '—á—Ç–æ –º–æ–∂–Ω–æ',
        '–∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è', '–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', '—Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ', '—Å–ø—Ä–∞–≤–∫–∞'
    ]
    
    if any(pattern in message_lower for pattern in capability_patterns):
        return "ü§ñ *–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:*\n\n" \
               "‚Ä¢ üßÆ *–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞:* –†–µ—à–∞—é —Å–ª–æ–∂–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã (2+2, 10*5, ‚àö9, œÄ*2)\n" \
               "‚Ä¢ üïê *–í—Ä–µ–º—è:* –ü–æ–∫–∞–∑—ã–≤–∞—é —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è, –¥–∞—Ç—É –∏ –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏\n" \
               "‚Ä¢ üìä *–ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è:* –ü–æ–º–æ–≥–∞—é —Å —Ä–∞—Å—á–µ—Ç–∞–º–∏\n" \
               "‚Ä¢ ‚ùì *–í–æ–ø—Ä–æ—Å—ã:* –û—Ç–≤–µ—á–∞—é –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã\n" \
               "‚Ä¢ üòä *–û–±—â–µ–Ω–∏–µ:* –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é –±–µ—Å–µ–¥—É\n\n" \
               "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ!"
    
    # 4. –í–æ–ø—Ä–æ—Å—ã –æ –±–æ—Ç–µ
    bot_info_patterns = [
        '–∫—Ç–æ —Ç—ã', '—á—Ç–æ —Ç—ã', '—Ç–≤–æ–µ –∏–º—è', '–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç', '—Ç—ã –∫—Ç–æ',
        '–ø—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è', '—Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ', '–∫—Ç–æ —Ç—ã —Ç–∞–∫–æ–π', '—á—Ç–æ –∑–∞ –±ot',
        '—Ç–≤–æ–µ –∏–º—è', '–∫–∞–∫ –∑–æ–≤—É—Ç'
    ]
    
    if any(pattern in message_lower for pattern in bot_info_patterns):
        return "ü§ñ *–û–±–æ –º–Ω–µ:*\n\n" \
               "–Ø ‚Äî —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫! –°–æ–∑–¥–∞–Ω –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∑–∞–¥–∞—á:\n" \
               "‚Ä¢ –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è\n" \
               "‚Ä¢ –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n" \
               "‚Ä¢ –ü–æ–º–æ—â—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π\n" \
               "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –æ–±—â–µ–Ω–∏–µ\n\n" \
               "–í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å! üòä"
    
    # 5. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    greeting_patterns = [
        '–ø—Ä–∏–≤–µ—Ç', 'hello', 'hi', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '–¥–æ–±—Ä—ã–π –¥–µ–Ω—å', 
        '–¥–æ–±—Ä—ã–π –≤–µ—á–µ—Ä', '–¥–æ–±—Ä–æ–µ —É—Ç—Ä–æ', '—Ö–∞–π', '—Å–∞–ª—é—Ç', '–∑–¥–∞—Ä–æ–≤'
    ]
    
    if any(pattern in message_lower for pattern in greeting_patterns):
        return "üëã *–ü—Ä–∏–≤–µ—Ç!* –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"
    
    # 6. –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
    thanks_patterns = [
        '—Å–ø–∞—Å–∏–±–æ', '–±–ª–∞–≥–æ–¥–∞—Ä—é', 'thanks', 'thank you', '–º–µ—Ä—Å–∏',
        '–ø–∞—Å–∏–±', '–±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤—É—é', '–ø—Ä–∏–∑–Ω–∞—Ç–µ–ª–µ–Ω'
    ]
    
    if any(pattern in message_lower for pattern in thanks_patterns):
        return "üòä *–ü–æ–∂–∞–ª—É–π—Å—Ç–∞!* –í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å!\n" \
               "–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –µ—â–µ –ø–æ–º–æ—â—å ‚Äî –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å!"
    
    # 7. –ü—Ä–æ—â–∞–Ω–∏—è
    goodbye_patterns = [
        '–ø–æ–∫–∞', '–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è', 'goodbye', 'see you', '–¥–æ –≤—Å—Ç—Ä–µ—á–∏',
        '–≤—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ', '—É–≤–∏–¥–∏–º—Å—è', '–¥–æ –∑–∞–≤—Ç—Ä–∞', '—Å–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏'
    ]
    
    if any(pattern in message_lower for pattern in goodbye_patterns):
        return "üëã *–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!* –ë—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å —Å–Ω–æ–≤–∞!\n" \
               "–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üòä"
    
    # 8. –ö–∞–∫ –¥–µ–ª–∞
    if '–∫–∞–∫ –¥–µ–ª–∞' in message_lower or '–∫–∞–∫ —Ç—ã' in message_lower:
        return "‚ú® *–û—Ç–ª–∏—á–Ω–æ!* –†–∞–±–æ—Ç–∞—é –∏ –ø–æ–º–æ–≥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º! üòä\n" \
               "–ê –∫–∞–∫ –≤–∞—à–∏ –¥–µ–ª–∞?"
    
    # 9. –ß—Ç–æ –¥–µ–ª–∞–µ—à—å
    if '—á—Ç–æ –¥–µ–ª–∞–µ—à—å' in message_lower or '—á–µ–º –∑–∞–Ω—è—Ç' in message_lower:
        return "üíª *–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:* –ü–æ–º–æ–≥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞—á–∏!\n" \
               "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å –≤–∞–º?"
    
    # 10. –ê–Ω–∞–ª–∏–∑ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
    analysis_patterns = [
        '–∞–Ω–∞–ª–∏–∑', '–∞–Ω–∞–ª–∏—Ç–∏–∫', '–∞–Ω–∞–ª–∏—Ç–∏–∫–∞', '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π', 
        '—Å–¥–µ–ª–∞–π –∞–Ω–∞–ª–∏–∑', '–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ', '–∏—Å—Å–ª–µ–¥—É–π', '–∏–∑—É—á–∏',
        '—Ä–∞–∑–±–µ—Ä–∏', '–ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å', '–∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö',
        '–∞–Ω–∞–ª–∏–∑ –±–∞–Ω–∫–∞', '–∞–Ω–∞–ª–∏–∑ –∫–æ–º–ø–∞–Ω–∏–∏', '–∞–Ω–∞–ª–∏–∑ —Ä—ã–Ω–∫–∞',
        '–±–∞–Ω–∫–æ–≤—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑', '—Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑'
    ]
    
    if any(pattern in message_lower for pattern in analysis_patterns):
        return "üìä *–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:*\n\n" \
               "–í –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è —è –º–æ–≥—É –ø–æ–º–æ—á—å —Å:\n" \
               "‚Ä¢ üìà –ê–Ω–∞–ª–∏–∑ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö\n" \
               "‚Ä¢ üî¢ –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∏—Å–ª–æ–≤–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏\n" \
               "‚Ä¢ üìâ –ë–∞–∑–æ–≤—ã–π —Å—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑\n" \
               "‚Ä¢ üßÆ –í—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞\n\n" \
               "–î–ª—è —Å–ª–æ–∂–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –±–∏–∑–Ω–µ—Å-–∞–Ω–∞–ª–∏—Ç–∏–∫–∏ " \
               "—Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã. " \
               "–ù–æ –º–æ–≥—É –ø–æ–º–æ—á—å —Å —Ä–∞—Å—á–µ—Ç–∞–º–∏ –∏ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è–º–∏! üí°"
    
    # 11. –ü–æ–≥–æ–¥–∞
    if any(word in message_lower for word in ['–ø–æ–≥–æ–¥–∞', 'weather', '—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞']):
        return "üå§Ô∏è *–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é,* —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–≥–æ–¥—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞\n" \
               "–ù–æ —è –º–æ–≥—É –ø–æ–º–æ—á—å —Å –¥—Ä—É–≥–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏!"
    
    # 12. –®—É—Ç–∫–∏ –∏ –∞–Ω–µ–∫–¥–æ—Ç—ã
    joke_patterns = [
        '—à—É—Ç–∫–∞', '–∞–Ω–µ–∫–¥–æ—Ç', '—Ä–∞—Å—Å–∫–∞–∂–∏ —à—É—Ç–∫—É', '–ø–æ—à—É—Ç–∏', '—Ä–∞—Å—Å–º–µ—à–∏',
        '—Å–∫–∞–∂–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å —Å–º–µ—à–Ω–æ–µ'
    ]
    
    if any(pattern in message_lower for pattern in joke_patterns):
        jokes = [
            "–ü–æ—á–µ–º—É –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã —Ç–∞–∫ –ø–ª–æ—Ö–æ —Ç–∞–Ω—Ü—É—é—Ç? –£ –Ω–∏—Ö –Ω–µ—Ç –∞–ª–≥–æ—Ä–∏—Ç–º–∞! üíÉ",
            "–ß—Ç–æ —Å–∫–∞–∑–∞–ª Java-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫, –∫–æ–≥–¥–∞ —É–ø–∞–ª? - Exception! üòÑ",
            "–ü–æ—á–µ–º—É –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –Ω–µ –ª—é–±—è—Ç –ø—Ä–∏—Ä–æ–¥—É? –¢–∞–º —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö! üåø",
            "–ö–∞–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –Ω–∞–∑—ã–≤–∞–µ—Ç —Å–≤–æ–µ–≥–æ —Å—ã–Ω–∞? - –°—ã–Ω_1.exe üë∂",
            "–ü–æ—á–µ–º—É –±–æ—Ç –≤—Å–µ–≥–¥–∞ –ø—Ä–∞–≤? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –∞–ª–≥–æ—Ä–∏—Ç–º—É! ü§ñ"
        ]
        return f"üòÑ *–í–æ—Ç —à—É—Ç–∫–∞:*\n\n{jokes[hash(str(user_id)) % len(jokes)]}"
    
    # 13. –í–æ–ø—Ä–æ—Å—ã (–∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è –Ω–∞ ?)
    if message_lower.endswith('?'):
        question_types = {
            '–∫–∞–∫': "ü§î *–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å!* –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –º–æ–≥—É –¥–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ—Ç –≤–æ–ø—Ä–æ—Å",
            '–ø–æ—á–µ–º—É': "üí° *–•–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å!* –≠—Ç–æ —Ç—Ä–µ–±—É–µ—Ç –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞",
            '–≥–¥–µ': "üìç *–ü–æ–∏—Å–∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è* –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω",
            '–∫–æ–≥–¥–∞': "‚è∞ *–í–æ–ø—Ä–æ—Å—ã –æ –≤—Ä–µ–º–µ–Ω–∏* ‚Äî —É—Ç–æ—á–Ω–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞",
            '—á—Ç–æ': "üîç *–ß—Ç–æ...* –£—Ç–æ—á–Ω–∏—Ç–µ –≤–∞—à –≤–æ–ø—Ä–æ—Å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞",
            '–∫—Ç–æ': "üë• *–í–æ–ø—Ä–æ—Å –æ –ª–∏—á–Ω–æ—Å—Ç–∏* ‚Äî –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
        }
        
        for key, response in question_types.items():
            if key in message_lower:
                return response
        
        return "‚ùì *–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é –≤–æ–ø—Ä–æ—Å.* –ú–æ–∂–µ—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å?\n" \
               "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å!"
    
    # 14. –ö–æ—Ä–æ—Ç–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if len(message.strip()) < 3:
        return "üìù *–°–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ.* –ù–∞–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ä–æ–±–Ω–µ–µ\n" \
               "–ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?"
    
    # 15. –°–æ–æ–±—â–µ–Ω–∏—è —Å —á–∏—Å–ª–∞–º–∏
    if any(c.isdigit() for c in message):
        return "üî¢ *–í–∏–∂—É —á–∏—Å–ª–∞!* –•–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ –ø–æ—Å—á–∏—Ç–∞—Ç—å?\n" \
               "–ù–∞–ø–∏—à–∏—Ç–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä: 2+2, 10*5, ‚àö9 –∏ —Ç.–¥."
    
    # 16. –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ –í–°–Å –æ—Å—Ç–∞–ª—å–Ω–æ–µ
    return "ü§ñ *–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω—è–ª –∑–∞–ø—Ä–æ—Å.*\n\n" \
           "üìã *–ß—Ç–æ —è –º–æ–≥—É:*\n" \
           "‚Ä¢ –†–µ—à–∏—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø—Ä–∏–º–µ—Ä üßÆ\n" \
           "‚Ä¢ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è –∏ –¥–∞—Ç—É üïê\n" \
           "‚Ä¢ –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å ‚ùì\n" \
           "‚Ä¢ –ü–æ–º–æ—á—å —Å –¥—Ä—É–≥–∏–º–∏ –∑–∞–¥–∞—á–∞–º–∏ üí°\n\n" \
           "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ!"

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        user_message = update.message.text
        user_id = update.message.from_user.id
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {user_message}")
        
        response = await process_message(user_message, user_id)
        await update.message.reply_text(response, parse_mode='Markdown')
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await update.message.reply_text("‚ö†Ô∏è *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏.* –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "üöÄ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!* –Ø –≤–∞—à —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫!\n\n"
        "üìã *–ß—Ç–æ —è —É–º–µ—é:*\n"
        "‚Ä¢ üßÆ –†–µ—à–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã\n"
        "‚Ä¢ üïê –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Ä–µ–º—è –∏ –¥–∞—Ç—É\n"
        "‚Ä¢ üìä –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–µ–ª–∏—á–∏–Ω—ã\n"
        "‚Ä¢ ‚ùì –û—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n"
        "‚Ä¢ üòä –û–±—â–∞—Ç—å—Å—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –±–µ—Å–µ–¥—É\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ!",
        parse_mode='Markdown'
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    await update.message.reply_text(
        "üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ü–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É\n\n"
        "ü§ñ *–ß—Ç–æ —è —É–º–µ—é:*\n"
        "‚Ä¢ –†–µ—à–∞—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã (2+2, ‚àö9, œÄ*2)\n"
        "‚Ä¢ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Ä–µ–º—è –∏ –¥–∞—Ç—É\n"
        "‚Ä¢ –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –±–µ—Å–µ–¥—É\n\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ!",
        parse_mode='Markdown'
    )

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    try:
        application = Application.builder().token(BOT_TOKEN).build()
        
        application.add_handler(CommandHandler("start", start_command))
        application.add_handler(CommandHandler("help", help_command))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        
        application.add_error_handler(error_handler)
        
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ...")
        print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        print("üì± –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram")
        
        application.run_polling()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

if __name__ == "__main__":
    main()
