import os
import logging
import asyncio
from datetime import datetime
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, ContextTypes, CommandHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –±–æ—Ç–∞
BOT_TOKEN = "8253068855:AAFPNJke9PYju90RgZe4ZOKOuuMSJNAs0X8"

# –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–º—è—Ç–∏ (–∫–∞–∫ –≤ Auto-Cloud API)
users_db = []
todos_db = []

async def process_message(message: str, user_id: int) -> str:
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    message_lower = message.lower().strip()
    
    # 1. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è - –î–û–ë–ê–í–õ–ï–ù–û
    if any(word in message_lower for word in ['–ø—Ä–∏–≤–µ—Ç', 'hello', 'hi', 'start', '–Ω–∞—á–∞—Ç—å', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '—Ö–∞–π']):
        return "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Auto-Cloud API! üöÄ\n\n–ù–∞–ø–∏—à–∏—Ç–µ '–ø–æ–º–æ—â—å' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥."
    
    # 2. –í–æ–ø—Ä–æ—Å—ã –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö - –î–û–ë–ê–í–õ–ï–ù–û
    elif any(word in message_lower for word in ['—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å', '—á—Ç–æ –º–æ–∂–µ—à—å', '—Ç–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', '–∫–æ–º–∞–Ω–¥—ã', '—Ñ—É–Ω–∫—Ü–∏–∏']):
        return "üöÄ –Ø —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Å Auto-Cloud API:\n\n‚Ä¢ üìä –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã\n‚Ä¢ üë• –£–ø—Ä–∞–≤–ª—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏\n‚Ä¢ ‚úÖ –£–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∞–º–∏\n‚Ä¢ üéØ –°–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏\n\n–ù–∞–ø–∏—à–∏—Ç–µ '–ø–æ–º–æ—â—å' –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥."
    
    # 3. –ü–æ–º–æ—â—å - –î–û–ë–ê–í–õ–ï–ù–û
    elif any(word in message_lower for word in ['–ø–æ–º–æ—â—å', 'help', '–∫–æ–º–∞–Ω–¥—ã', '—Å–ø—Ä–∞–≤–∫–∞']):
        return "üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n" \
               "‚Ä¢ `–ø—Ä–∏–≤–µ—Ç` - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n" \
               "‚Ä¢ `–ø–æ–º–æ—â—å` - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n" \
               "‚Ä¢ `—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞` - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã\n" \
               "‚Ä¢ `–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏` - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n" \
               "‚Ä¢ `–∑–∞–¥–∞—á–∏` - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á\n" \
               "‚Ä¢ `—Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ò–≤–∞–Ω email@mail.ru`\n" \
               "‚Ä¢ `—Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –ó–∞–≥–æ–ª–æ–≤–æ–∫ –û–ø–∏—Å–∞–Ω–∏–µ`\n\n" \
               "üí° –ü—Ä–∏–º–µ—Ä—ã:\n" \
               "`—Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–ª–µ–∫—Å–µ–π alex@company.com`\n" \
               "`—Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é API`"
    
    # 4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã
    elif any(word in message_lower for word in ['—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', '—Å—Ç–∞—Ç—É—Å', 'stats', 'status']):
        return f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:*\n\n" \
               f"‚Ä¢ üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users_db)}\n" \
               f"‚Ä¢ ‚úÖ –ó–∞–¥–∞—á: {len(todos_db)}\n" \
               f"‚Ä¢ üü¢ –°—Ç–∞—Ç—É—Å: –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    
    # 5. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    elif any(word in message_lower for word in ['–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', 'users', '—é–∑–µ—Ä—ã', '–∫–ª–∏–µ–Ω—Ç—ã']):
        if not users_db:
            return "üë• *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:*\n\n–ü–æ–∫–∞ –Ω–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ.\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `—Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ò–≤–∞–Ω email@mail.ru`"
        
        users_list = "\n".join([f"‚Ä¢ üë§ {u.get('username', 'N/A')} ({u.get('email', 'N/A')})" for u in users_db[:10]])
        return f"üë• *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(users_db)}):*\n\n{users_list}" + \
               ("\n\n... –∏ –¥—Ä—É–≥–∏–µ" if len(users_db) > 10 else "")
    
    # 6. –ó–∞–¥–∞—á–∏
    elif any(word in message_lower for word in ['–∑–∞–¥–∞—á–∏', 'todos', '—Ç–∞—Å–∫–∏', 'tasks', '–∑–∞–¥–∞–Ω–∏—è']):
        if not todos_db:
            return "‚úÖ *–ó–∞–¥–∞—á–∏:*\n\n–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞—á –≤ —Å–∏—Å—Ç–µ–º–µ.\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `—Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –ó–∞–≥–æ–ª–æ–≤–æ–∫ –û–ø–∏—Å–∞–Ω–∏–µ`"
        
        todos_list = "\n".join([f"‚Ä¢ üìù {t.get('title', 'N/A')}" for t in todos_db[:10]])
        return f"‚úÖ *–ó–∞–¥–∞—á–∏ ({len(todos_db)}):*\n\n{todos_list}" + \
               ("\n\n... –∏ –¥—Ä—É–≥–∏–µ" if len(todos_db) > 10 else "")
    
    # 7. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    elif any(word in message_lower for word in ['—Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '–¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', '–Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å']):
        try:
            # –ü–∞—Ä—Å–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            parts = message.split(' ', 2)
            if len(parts) >= 3:
                username = parts[2].split(' ')[0]
                email = parts[2].split(' ')[1] if len(parts[2].split(' ')) > 1 else f"{username}@example.com"
                
                # –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                user_data = {
                    "id": len(users_db) + 1,
                    "username": username,
                    "email": email,
                    "created_at": datetime.now().isoformat()
                }
                users_db.append(user_data)
                
                return f"‚úÖ *–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω!*\n\n" \
                       f"üë§ –ò–º—è: {username}\n" \
                       f"üìß Email: {email}\n" \
                       f"üÜî ID: {user_data['id']}\n" \
                       f"üìÖ –°–æ–∑–¥–∞–Ω: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
            else:
                return "‚ùå *–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!*\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `—Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ò–≤–∞–Ω email@mail.ru`"
        except Exception as e:
            return f"‚ùå *–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n\n{str(e)}"
    
    # 8. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
    elif any(word in message_lower for word in ['—Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É', '–¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É', '–Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞']):
        try:
            # –ü–∞—Ä—Å–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            parts = message.split(' ', 2)
            if len(parts) >= 3:
                title = parts[2].split(' ', 1)[0]
                description = parts[2].split(' ', 1)[1] if len(parts[2].split(' ', 1)) > 1 else "–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏"
                
                # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á—É
                todo_data = {
                    "id": len(todos_db) + 1,
                    "title": title,
                    "description": description,
                    "created_at": datetime.now().isoformat()
                }
                todos_db.append(todo_data)
                
                return f"‚úÖ *–ó–∞–¥–∞—á–∞ —Å–æ–∑–¥–∞–Ω–∞!*\n\n" \
                       f"üìù –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title}\n" \
                       f"üìã –û–ø–∏—Å–∞–Ω–∏–µ: {description}\n" \
                       f"üÜî ID: {todo_data['id']}\n" \
                       f"üìÖ –°–æ–∑–¥–∞–Ω–∞: {datetime.now().strftime('%d.%m.%Y %H:%M')}"
            else:
                return "‚ùå *–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!*\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `—Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –ó–∞–≥–æ–ª–æ–≤–æ–∫ –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏`"
        except Exception as e:
            return f"‚ùå *–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏:*\n\n{str(e)}"
    
    # 9. –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏ - –î–û–ë–ê–í–õ–ï–ù–û
    elif any(word in message_lower for word in ['—Å–ø–∞—Å–∏–±–æ', '–±–ª–∞–≥–æ–¥–∞—Ä—é', 'thanks', 'thank you']):
        return "üòä –ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –†–∞–¥ –ø–æ–º–æ—á—å!\n\n–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –µ—â–µ –ø–æ–º–æ—â—å - –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å!"
    
    # 10. –ü—Ä–æ—â–∞–Ω–∏—è - –î–û–ë–ê–í–õ–ï–ù–û
    elif any(word in message_lower for word in ['–ø–æ–∫–∞', '–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è', 'goodbye', 'see you']):
        return "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ë—É–¥—É —Ä–∞ –ø–æ–º–æ—á—å —Å–Ω–æ–≤–∞!\n\n–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! üòä"
    
    # 11. –î–ª—è –≤—Å–µ–≥–æ –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ
    else:
        return "‚ùì *–ù–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É*\n\n–ù–∞–ø–∏—à–∏—Ç–µ `–ø–æ–º–æ—â—å` –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏–ª–∏ `–ø—Ä–∏–≤–µ—Ç` —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É."

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    try:
        user_message = update.message.text
        user_id = update.message.from_user.id
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {user_message}")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        response = await process_message(user_message, user_id)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        await update.message.reply_text(response, parse_mode='Markdown')
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        await update.message.reply_text("‚ö†Ô∏è *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏.* –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑")

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "üöÄ *–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Auto-Cloud Bot!*\n\n"
        "–Ø –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–∏—Å—Ç–µ–º–æ–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –∑–∞–¥–∞—á–∞–º–∏!\n\n"
        "üìã *–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–ø–∏—à–∏—Ç–µ:*\n"
        "‚Ä¢ `–ø—Ä–∏–≤–µ—Ç` - –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ\n"
        "‚Ä¢ `–ø–æ–º–æ—â—å` - —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥\n"
        "‚Ä¢ `—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞` - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n\n"
        "üí° –Ø –ø–æ–Ω–∏–º–∞—é —Å–æ–æ–±—â–µ–Ω–∏—è –±–µ–∑ —Å–ª–µ—à–∞ - –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ!",
        parse_mode='Markdown'
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    await update.message.reply_text(
        "üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n"
        "‚Ä¢ `/start` - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É\n"
        "‚Ä¢ `/help` - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
        "‚Ä¢ `—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞` - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n"
        "‚Ä¢ `–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏` - —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        "‚Ä¢ `–∑–∞–¥–∞—á–∏` - —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á\n"
        "‚Ä¢ `—Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ò–≤–∞–Ω email@mail.ru`\n"
        "‚Ä¢ `—Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –ó–∞–≥–æ–ª–æ–≤–æ–∫ –û–ø–∏—Å–∞–Ω–∏–µ`\n\n"
        "üí° *–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:*\n"
        "`—Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ê–ª–µ–∫—Å–µ–π alex@company.com`\n"
        "`—Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é API`\n\n"
        "üòä –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –±–µ–∑ —Å–ª–µ—à–∞!",
        parse_mode='Markdown'
    )

async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
    logger.error(f"–û—à–∏–±–∫–∞: {context.error}")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        application = Application.builder().token(BOT_TOKEN).build()
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        application.add_handler(CommandHandler("start", start_command))
        application.add_handler(CommandHandler("help", help_command))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
        application.add_error_handler(error_handler)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ...")
        print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        print("üì± –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram")
        print("üí¨ –ë–æ—Ç –ø–æ–Ω–∏–º–∞–µ—Ç: –ø—Ä–∏–≤–µ—Ç, –ø–æ–º–æ—â—å, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, –∑–∞–¥–∞—á–∏ –∏ –¥—Ä.")
        
        application.run_polling()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

if __name__ == "__main__":
    main()
