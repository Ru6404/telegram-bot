import os
import random
import re
from datetime import datetime
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

BOT_TOKEN = "8253068855:AAFPNJke9PYju90RgZe4ZOKOuuMSJNAs0X8"
ADMIN_ID = 5569793273  

def is_admin(user_id):
    return user_id == ADMIN_ID

def calculate_math(expression):
    try:
        if not re.match(r'^[\d\s\+\-\*\/\(\)\.]+$', expression):
            return None
        if any(op in expression for op in ['**', '//', '%', '&', '|', '^', '~', '=']):
            return None
        result = eval(expression, {"__builtins__": None}, {})
        return result
    except:
        return None

def generate_response(message):
    message_lower = message.lower()
    
    if any(word in message_lower for word in ['–ø—Ä–∏–≤–µ—Ç', '–∑–¥—Ä–∞–≤—Å—Ç–≤', 'hello', 'hi']):
        return "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫. –°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –æ —á–µ–º —É–≥–æ–¥–Ω–æ!"
    
    if any(word in message_lower for word in ['—á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å', '–≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏', '—Ñ—É–Ω–∫—Ü–∏–∏']):
        return """ü§ñ –Ø –º–æ–≥—É:
‚Ä¢ üßÆ –†–µ—à–∞—Ç—å –ø—Ä–∏–º–µ—Ä—ã: 2+2, 5*8
‚Ä¢ ‚è∞ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –≤—Ä–µ–º—è
‚Ä¢ üá∫üáø –†–∞—Å—Å–∫–∞–∑—ã–≤–∞—Ç—å –æ–± –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–µ
‚Ä¢ üì∞ –î–∞–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏

–ü–æ–ø—Ä–æ–±—É–π—Ç–µ: "–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç 15*20" –∏–ª–∏ "–ù–æ–≤–æ—Å—Ç–∏ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞\""""
    
    if any(word in message_lower for word in ['—É–∑–±–µ–∫–∏—Å—Ç–∞–Ω', '—É–∑–±–µ–∫', '—Ç–∞—à–∫–µ–Ω—Ç']):
        return """üá∫üáø –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω:
–°—Ç–æ–ª–∏—Ü–∞: –¢–∞—à–∫–µ–Ω—Ç
–ù–∞—Å–µ–ª–µ–Ω–∏–µ: 35 –º–ª–Ω —á–µ–ª–æ–≤–µ–∫
–≠–∫–æ–Ω–æ–º–∏–∫–∞: —Ä–æ—Å—Ç 5.8%
–¢—É—Ä–∏–∑–º: +30% –≤ —ç—Ç–æ–º –≥–æ–¥—É

–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"""
    
    if '–Ω–æ–≤–æ—Å—Ç–∏' in message_lower and '—É–∑–±–µ–∫' in message_lower:
        return """üì∞ –ù–æ–≤–æ—Å—Ç–∏ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞:
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏–∫–∞ —Ä–∞—Å—Ç–µ—Ç –Ω–∞ 5.8%
‚Ä¢ –¢—É—Ä–∏–∑–º —É–≤–µ–ª–∏—á–∏–ª—Å—è –Ω–∞ 30%
‚Ä¢ –ù–æ–≤—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã

–£—Ç–æ—á–Ω–∏—Ç–µ —Ç–µ–º—É –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π!"""
    
    if any(word in message_lower for word in ['–≤—Ä–µ–º—è', '–∫–æ—Ç–æ—Ä—ã–π —á–∞—Å', '–¥–∞—Ç–∞']):
        return f"‚è∞ –°–µ–π—á–∞—Å: {datetime.now().strftime('%H:%M:%S %d.%m.%Y')}"
    
    math_match = re.search(r'(\d+[\+\-\*\/]\d+)|(–ø–æ—Å—á–∏—Ç–∞–π|—Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç)\s+(.+)', message)
    if math_match:
        expr = math_match.group(1) or math_match.group(3)
        if expr:
            result = calculate_math(expr)
            if result is not None:
                return f"üßÆ –†–µ–∑—É–ª—å—Ç–∞—Ç: {expr} = {result}"
            else:
                return "‚ùå –ù–µ –º–æ–≥—É —Ä–µ—à–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä"
    
    if any(word in message_lower for word in ['–ø–µ—Ä–µ–≤–µ–¥–∏', 'translat', '–ø–µ—Ä–µ–≤–æ–¥']):
        return "üåç –ù–∞–ø–∏—à–∏—Ç–µ: '–ø–µ—Ä–µ–≤–µ–¥–∏ [—Å–ª–æ–≤–æ] –Ω–∞ [—è–∑—ã–∫]'"
    
    responses = [
        "ü§î –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –£—Ç–æ—á–Ω–∏—Ç–µ –¥–µ—Ç–∞–ª–∏?",
        "üí° –•–æ—Ä–æ—à–æ, —è –ø–æ–¥—É–º–∞—é –Ω–∞–¥ —ç—Ç–∏–º. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
        "üéØ –ü–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å! –ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ—Ç–∞–ª–∏",
        "üîç –ò—â—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é... –ú–æ–∂–µ—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å?",
        "üöÄ –ü—Ä–∏–Ω—è–ª! –ó–∞–¥–∞–π—Ç–µ –±–æ–ª–µ–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å"
    ]
    
    return random.choice(responses)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    user_id = user.id
    
    # –†–∞–∑–Ω—ã–µ –º–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    if is_admin(user_id):
        keyboard = [
            ["üßÆ –ü–æ—Å—á–∏—Ç–∞—Ç—å", "‚è∞ –í—Ä–µ–º—è"],
            ["üá∫üáø –ù–æ–≤–æ—Å—Ç–∏", "üõ†Ô∏è –ê–¥–º–∏–Ω"],
            ["üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"]
        ]
    else:
        keyboard = [
            ["üßÆ –ü–æ—Å—á–∏—Ç–∞—Ç—å –ø—Ä–∏–º–µ—Ä", "‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è"],
            ["üá∫üáø –ù–æ–≤–æ—Å—Ç–∏ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞", "ü§ñ –û –±–æ—Ç–µ"]
        ]
    
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    welcome_text = f"üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!"
    if is_admin(user_id):
        welcome_text += "\nüõ†Ô∏è –†–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
    
    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        text = update.message.text
        user = update.message.from_user
        user_id = user.id
        
        print(f"üì© {user.first_name} (ID: {user_id}): {text}")
        
        # –ê–¥–º–∏–Ω-–∫–æ–º–∞–Ω–¥—ã
        if is_admin(user_id):
            if text == "üõ†Ô∏è –ê–¥–º–∏–Ω":
                admin_info = f"""üõ†Ô∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:
ID: {user_id}
–ò–º—è: {user.first_name}

–ö–æ–º–∞–Ω–¥—ã:
/users - —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/broadcast - —Ä–∞—Å—Å—ã–ª–∫–∞"""
                await update.message.reply_text(admin_info)
                return
                
            elif text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
                await update.message.reply_text("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 15\n–°–æ–æ–±—â–µ–Ω–∏–π: 127\n–û–Ω–ª–∞–π–Ω: 3")
                return
                
            elif text == "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏":
                await update.message.reply_text("üë• –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:\n‚Ä¢ User1 (ID: 111)\n‚Ä¢ User2 (ID: 222)\n‚Ä¢ User3 (ID: 333)")
                return
        
        # –û–±—â–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—Å–µ—Ö
        if text == "üßÆ –ü–æ—Å—á–∏—Ç–∞—Ç—å" or text == "üßÆ –ü–æ—Å—á–∏—Ç–∞—Ç—å –ø—Ä–∏–º–µ—Ä":
            await update.message.reply_text("üí° –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–∏–º–µ—Ä –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞:\n–ù–∞–ø—Ä–∏–º–µ—Ä: 2+2, 5*8, 100/4")
            return
            
        elif text == "‚è∞ –í—Ä–µ–º—è" or text == "‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è":
            await update.message.reply_text(f"‚è∞ {datetime.now().strftime('%H:%M:%S %d.%m.%Y')}")
            return
            
        elif text == "üá∫üáø –ù–æ–≤–æ—Å—Ç–∏" or text == "üá∫üáø –ù–æ–≤–æ—Å—Ç–∏ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞":
            response = """üì∞ –ù–æ–≤–æ—Å—Ç–∏ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞:
‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Ä–æ—Å—Ç: 5.8%
‚Ä¢ –£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ç—É—Ä–∏–∑–º–∞: +30%
‚Ä¢ –ù–æ–≤—ã–µ –±–∏–∑–Ω–µ—Å-–ø—Ä–æ–≥—Ä–∞–º–º—ã

–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"""
            await update.message.reply_text(response)
            return
            
        elif text == "ü§ñ –û –±–æ—Ç–µ":
            response = """ü§ñ –Ø - —É–º–Ω—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫!
–ú–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
‚Ä¢ –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–∞—Å—á–µ—Ç—ã
‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–µ
‚Ä¢ –ù–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
‚Ä¢ –ü–æ–º–æ—â—å —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏

–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å!"""
            await update.message.reply_text(response)
            return
        
        # –û–±—ã—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        await update.message.reply_text("ü§ñ –î—É–º–∞—é –Ω–∞–¥ –æ—Ç–≤–µ—Ç–æ–º...")
        response = generate_response(text)
        await update.message.reply_text(response)
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")

def main():
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å—é...")
    
    try:
        application = Application.builder().token(BOT_TOKEN).build()
        application.add_handler(CommandHandler("start", start))
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
        
        print("‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω!")
        print("ü§ñ –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π...")
        
        application.run_polling()
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
