import sqlite3
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup

# === –ö–û–ù–§–ò–ì ===
API_TOKEN = "8253068855:AAFPNJke9PYju90RgZe4ZOKOuuMSJNAs0X8"
ADMIN_ID = 5569793273

# === –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø ===
bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# === –ë–ê–ó–ê –î–ê–ù–ù–´–• ===
conn = sqlite3.connect("clients.db")
cursor = conn.cursor()
cursor.execute("""
CREATE TABLE IF NOT EXISTS clients (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    telegram_id INTEGER UNIQUE,
    name TEXT,
    phone TEXT,
    comment TEXT,
    viewed INTEGER DEFAULT 0
)
""")
conn.commit()

# === –ö–õ–ò–ï–ù–¢–°–ö–û–ï –ú–ï–ù–Æ ===
client_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìå –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")],
        [KeyboardButton(text="‚ÑπÔ∏è –û –Ω–∞—Å"), KeyboardButton(text="üìû –°–≤—è–∑–∞—Ç—å—Å—è")]
    ],
    resize_keyboard=True
)

# === –ö–ù–û–ü–ö–ê ¬´–ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ¬ª ===
main_menu_button = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")]],
    resize_keyboard=True
)

# === –ê–î–ú–ò–ù-–ú–ï–ù–Æ ===
admin_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üìã –ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏")],
        [KeyboardButton(text="üìÇ –í—Å–µ –∑–∞—è–≤–∫–∏")],
        [KeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É")]
    ],
    resize_keyboard=True
)

# === –°–¢–ê–†–¢ ===
@dp.message(Command("start"))
async def start(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        await message.answer("üë®‚Äçüíº –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", reply_markup=admin_keyboard)
    else:
        await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=client_keyboard)

# === –í–û–ó–í–†–ê–¢ –í –ú–ï–ù–Æ ===
@dp.message(lambda m: m.text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main(message: types.Message):
    await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=client_keyboard)

# === –°–û–ó–î–ê–ù–ò–ï –ó–ê–Ø–í–ö–ò ===
user_data = {}

@dp.message(lambda m: m.text == "üìå –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É")
async def get_name(message: types.Message):
    user_data[message.from_user.id] = {}
    await message.answer("Ruslan:")

@dp.message(lambda m: m.from_user.id in user_data and "name" not in user_data[m.from_user.id])
async def save_name(message: types.Message):
    user_data[message.from_user.id]["name"] = message.text
    await message.answer("+821021556564:")

@dp.message(lambda m: m.from_user.id in user_data and "phone" not in user_data[m.from_user.id])
async def save_phone(message: types.Message):
    user_data[message.from_user.id]["phone"] = message.text
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:")

@dp.message(lambda m: m.from_user.id in user_data and "comment" not in user_data[m.from_user.id])
async def save_comment(message: types.Message):
    user_id = message.from_user.id
    name = user_data[user_id]["name"]
    phone = user_data[user_id]["phone"]
    comment = message.text

    cursor.execute(
        "INSERT INTO clients (telegram_id, name, phone, comment) VALUES (?, ?, ?, ?)",
        (user_id, name, phone, comment)
    )
    conn.commit()

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    await bot.send_message(
        ADMIN_ID,
        f"üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n\n–ò–º—è: {name}\n–¢–µ–ª–µ—Ñ–æ–Ω: {phone}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {comment}"
    )
    await message.answer("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞.", reply_markup=main_menu_button)
    del user_data[user_id]

# === –ü–†–û–ß–ò–ï –ö–ù–û–ü–ö–ò ===
@dp.message(lambda m: m.text == "‚ÑπÔ∏è –û –Ω–∞—Å")
async def about(message: types.Message):
    await message.answer("–ú—ã –∫–æ–º–∞–Ω–¥–∞, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏ —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞ üöÄ", reply_markup=main_menu_button)

@dp.message(lambda m: m.text == "üìû –°–≤—è–∑–∞—Ç—å—Å—è")
async def contact(message: types.Message):
    await message.answer("–°–≤—è–∑–∞—Ç—å—Å—è –º–æ–∂–Ω–æ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É: +82-10-1234-5678", reply_markup=main_menu_button)

# === –ê–î–ú–ò–ù-–§–£–ù–ö–¶–ò–ò ===
@dp.message(lambda m: m.text == "üìã –ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏")
async def new_requests(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        return
    cursor.execute("SELECT * FROM clients WHERE viewed = 0")
    rows = cursor.fetchall()
    if not rows:
        await message.answer("‚ùå –ù–µ—Ç –Ω–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫.", reply_markup=admin_keyboard)
        return

    msg = "üìã –ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏:\n\n"
    for row in rows:
        client_id_db = row[0]
        telegram_id = row[1]
        msg += f"#{client_id_db} ‚Äî {row[2]}, {row[3]}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {row[4]}\n\n"

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ
        await bot.send_message(
            chat_id=telegram_id,
            text="‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–∞! –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è."
        )

    await message.answer(msg, reply_markup=admin_keyboard)
    cursor.execute("UPDATE clients SET viewed = 1 WHERE viewed = 0")
    conn.commit()

@dp.message(lambda m: m.text == "üìÇ –í—Å–µ –∑–∞—è–≤–∫–∏")
async def all_requests(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        return
    cursor.execute("SELECT * FROM clients")
    rows = cursor.fetchall()
    if not rows:
        await message.answer("‚ùå –ù–µ—Ç –∑–∞—è–≤–æ–∫.", reply_markup=admin_keyboard)
        return
    msg = "üìÇ –í—Å–µ –∑–∞—è–≤–∫–∏:\n\n"
    for row in rows:
        msg += f"#{row[0]} ‚Äî {row[2]}, {row[3]}\n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {row[4]}\n–ü—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–æ: {'–î–∞' if row[5] else '–ù–µ—Ç'}\n\n"
    await message.answer(msg, reply_markup=admin_keyboard)

@dp.message(lambda m: m.text == "üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∑–∞—è–≤–∫—É")
async def delete_prompt(message: types.Message):
    if message.from_user.id != ADMIN_ID:
        return
    await message.answer("–í–≤–µ–¥–∏—Ç–µ ID –∑–∞—è–≤–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:\n–ü—Ä–∏–º–µ—Ä: 3")

@dp.message(lambda m: m.text.isdigit() and m.from_user.id == ADMIN_ID)
async def delete_request(message: types.Message):
    client_id = int(message.text)
    cursor.execute("SELECT * FROM clients WHERE id = ?", (client_id,))
    if not cursor.fetchone():
        await message.answer(f"‚ùå –ó–∞—è–≤–∫–∞ #{client_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.", reply_markup=admin_keyboard)
        return
    cursor.execute("DELETE FROM clients WHERE id = ?", (client_id,))
    conn.commit()
    await message.answer(f"‚úÖ –ó–∞—è–≤–∫–∞ #{client_id} —É–¥–∞–ª–µ–Ω–∞.", reply_markup=admin_keyboard)

# === –ó–ê–ü–£–°–ö ===
async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
