from http.server import HTTPServer, BaseHTTPRequestHandler
import json
import random
from datetime import datetime
import re

class AIHandler(BaseHTTPRequestHandler):
    def do_OPTIONS(self):
        self.send_response(200)
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        self.end_headers()
    
    def do_POST(self):
        if self.path == '/api/ai/ask':
            try:
                content_length = int(self.headers['Content-Length'])
                post_data = self.rfile.read(content_length)
                data = json.loads(post_data)
                
                question = data.get('question', '').lower()
                print(f"üì® –í–æ–ø—Ä–æ—Å: {question}")
                
                # –£–ú–ù–´–ï –û–¢–í–ï–¢–´ –° –ü–û–ù–ò–ú–ê–ù–ò–ï–ú –ö–û–ù–¢–ï–ö–°–¢–ê
                response = self.generate_ai_response(question)
                
                self.send_response(200)
                self.send_header('Content-type', 'application/json')
                self.send_header('Access-Control-Allow-Origin', '*')
                self.end_headers()
                
                response_data = json.dumps({"answer": response, "status": "success"})
                self.wfile.write(response_data.encode())
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
                self.send_response(500)
                self.end_headers()
        else:
            self.send_response(404)
            self.end_headers()
    
    def generate_ai_response(self, question):
        """–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —É–º–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –ò–ò"""
        current_date = datetime.now().strftime("%d.%m.%Y")
        
        # –ù–û–í–û–°–¢–ò –£–ó–ë–ï–ö–ò–°–¢–ê–ù–ê
        if '—É–∑–±–µ–∫' in question and '–Ω–æ–≤–æ—Å—Ç–∏' in question:
            if '—Å–µ–≥–æ–¥–Ω—è' in question:
                return f"""üì∞ –ù–æ–≤–æ—Å—Ç–∏ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è ({current_date}):

‚Ä¢ –≠–∫–æ–Ω–æ–º–∏–∫–∞: –¶–µ–Ω—Ç—Ä–æ–±–∞–Ω–∫ —Å–æ—Ö—Ä–∞–Ω–∏–ª –∫–ª—é—á–µ–≤—É—é —Å—Ç–∞–≤–∫—É –Ω–∞ —É—Ä–æ–≤–Ω–µ 14%
‚Ä¢ –ë–∏–∑–Ω–µ—Å: –ó–∞–ø—É—â–µ–Ω–∞ –Ω–æ–≤–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –º–∞–ª–æ–≥–æ –±–∏–∑–Ω–µ—Å–∞
‚Ä¢ –°–ø–æ—Ä—Ç: –°–±–æ—Ä–Ω–∞—è –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞ –ø–æ–±–µ–¥–∏–ª–∞ –≤ —Ç–æ–≤–∞—Ä–∏—â–µ—Å–∫–æ–º –º–∞—Ç—á–µ
‚Ä¢ –¢—É—Ä–∏–∑–º: –†–µ–∫–æ—Ä–¥–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—É—Ä–∏—Å—Ç–æ–≤ –≤ –°–∞–º–∞—Ä–∫–∞–Ω–¥–µ

–ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? –≠–∫–æ–Ω–æ–º–∏–∫–∞, —Å–ø–æ—Ä—Ç, –∫—É–ª—å—Ç—É—Ä–∞?"""
            
            elif '–Ω–µ–¥–µ–ª' in question:
                return """üì∞ –ù–æ–≤–æ—Å—Ç–∏ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞ –∑–∞ –Ω–µ–¥–µ–ª—é:

‚Ä¢ –ü–æ–¥–ø–∏—Å–∞–Ω–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–µ —Å –û–ê–≠
‚Ä¢ –í–í–ü –≤—ã—Ä–æ—Å –Ω–∞ 5.8% –∑–∞ –≥–æ–¥
‚Ä¢ –ó–∞–ø—É—â–µ–Ω—ã –Ω–æ–≤—ã–µ –∞–≤–∏–∞—Ä–µ–π—Å—ã –≤ –ï–≤—Ä–æ–ø—É –∏ –ê–∑–∏—é
‚Ä¢ –¶–∏—Ñ—Ä–æ–≤–∏–∑–∞—Ü–∏—è –≥–æ—Å—É—Å–ª—É–≥ –¥–æ—Å—Ç–∏–≥–ª–∞ 90%

–£—Ç–æ—á–Ω–∏—Ç–µ —Ç–µ–º—É –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π!"""
            
            else:
                return """üì∞ –ù–æ–≤–æ—Å—Ç–∏ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞:

‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–∏–π —Ä–æ—Å—Ç: 5.8% –≤ 2024 –≥–æ–¥—É
‚Ä¢ –¢—É—Ä–∏–∑–º: —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –Ω–∞ 30% 
‚Ä¢ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏: –ø—Ä–∏–≤–ª–µ—á–µ–Ω–æ $7.8 –º–ª—Ä–¥
‚Ä¢ –ò–Ω—Ñ–ª—è—Ü–∏—è: 10.2% –∑–∞ –≥–æ–¥

–£—Ç–æ—á–Ω–∏—Ç–µ: "–Ω–æ–≤–æ—Å—Ç–∏ —Å–µ–≥–æ–¥–Ω—è" –∏–ª–∏ "–Ω–æ–≤–æ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é\""""
        
        # –ú–ê–¢–ï–ú–ê–¢–ò–ö–ê
        math_match = re.search(r'(\d+[\+\-\*\/]\d+)|(–ø–æ—Å—á–∏—Ç–∞–π|—Å–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç)\s+(.+)', question)
        if math_match:
            expr = math_match.group(1) or math_match.group(3)
            try:
                result = eval(expr, {"__builtins__": None}, {})
                return f"üßÆ –†–µ–∑—É–ª—å—Ç–∞—Ç: {expr} = {result}"
            except:
                return "‚ùå –ù–µ –º–æ–≥—É —Ä–µ—à–∏—Ç—å —ç—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä"
        
        # –í–†–ï–ú–Ø
        if any(word in question for word in ['–≤—Ä–µ–º—è', '–∫–æ—Ç–æ—Ä—ã–π —á–∞—Å', '–¥–∞—Ç–∞']):
            return f"‚è∞ –°–µ–π—á–∞—Å: {datetime.now().strftime('%H:%M:%S %d.%m.%Y')}"
        
        # –û–ë–©–ò–ï –í–û–ü–†–û–°–´
        if '—á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å' in question:
            return """ü§ñ –Ø - –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫! –ú–æ–≥—É:
‚Ä¢ üì∞ –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –£–∑–±–µ–∫–∏—Å—Ç–∞–Ω–∞
‚Ä¢ üßÆ –†–µ—à–∏—Ç—å –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã  
‚Ä¢ ‚è∞ –ü–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è –∏ –¥–∞—Ç—É
‚Ä¢ üí° –û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã

–°–ø—Ä–æ—Å–∏—Ç–µ –º–µ–Ω—è –æ —á–µ–º —É–≥–æ–¥–Ω–æ!"""
        
        # –£–ú–ù–´–ô –û–¢–í–ï–¢ –ü–û –£–ú–û–õ–ß–ê–ù–ò–Æ
        responses = [
            f"ü§î –ü–æ –≤–∞—à–µ–º—É –≤–æ–ø—Ä–æ—Å—É '{question}': —á—Ç–æ –∏–º–µ–Ω–Ω–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
            f"üí° '{question}' - —Ö–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å! –£—Ç–æ—á–Ω–∏—Ç–µ –¥–µ—Ç–∞–ª–∏?",
            f"üéØ –ü–æ–Ω—è–ª –≤–∞—à –∑–∞–ø—Ä–æ—Å! –ù—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è?",
            f"üîç –ò–∑—É—á–∞—é –≤–æ–ø—Ä–æ—Å... –ö–∞–∫–∏–µ –∞—Å–ø–µ–∫—Ç—ãÊúÄÈáçË¶Å?",
            f"üöÄ –ü—Ä–∏–Ω—è–ª! –ü–æ —Ç–µ–º–µ '{question}' –µ—Å—Ç—å –º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏."
        ]
        
        return random.choice(responses)

if __name__ == '__main__':
    server = HTTPServer(('127.0.0.1', 5050), AIHandler)
    print("üöÄ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ò–ò-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 5050...")
    print("üì° Endpoint: http://127.0.0.1:5050/api/ai/ask")
    print("üîß –ì–æ—Ç–æ–≤ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã...")
    server.serve_forever()
