import os
import logging
import random
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, MessageHandler, filters, ContextTypes, CommandHandler

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

BOT_TOKEN = "8253068855:AAFPNJke9PYju90RgZe4ZOKOuuMSJNAs0X8"

# –ó–ê–ú–ï–ù–ò–¢–ï –≠–¢–û–¢ ID –ù–ê –í–ê–® –†–ï–ê–õ–¨–ù–´–ô TELEGRAM ID
ADMIN_ID = 123456789  # ‚Üê –í–ê–® ID –ó–î–ï–°–¨

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
def main_menu():
    return ReplyKeyboardMarkup([
        ["üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "‚úÖ –ó–∞–¥–∞—á–∏"],
        ["üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã", "üìã –ü–æ–º–æ—â—å"],
        ["‚ûï –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É"]
    ], resize_keyboard=True)

# –ê–¥–º–∏–Ω –º–µ–Ω—é (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
def admin_menu():
    return ReplyKeyboardMarkup([
        ["üë• –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏"],
        ["üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã", "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∫—ç—à"],
        ["‚úÖ –ü—Ä–∏–Ω—è—Ç—å", "‚ùå –û—Ç–∫–∞–∑"],
        ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    ], resize_keyboard=True)

# –ú–µ–Ω—é –¥–ª—è –∞–¥–º–∏–Ω–∞ (–≤–∫–ª—é—á–∞–µ—Ç –∞–¥–º–∏–Ω—Å–∫—É—é –ø–∞–Ω–µ–ª—å)
def admin_main_menu():
    return ReplyKeyboardMarkup([
        ["üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "‚úÖ –ó–∞–¥–∞—á–∏"],
        ["üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã", "üìã –ü–æ–º–æ—â—å"],
        ["‚ûï –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É"],
        ["üõ†Ô∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"]
    ], resize_keyboard=True)

# –û—Ç–≤–µ—Ç—ã –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã —Å–æ–æ–±—â–µ–Ω–∏–π
RESPONSES = {
    'greeting': [
        "üëã –ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?",
        "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –†–∞–¥ –≤–∞—Å –≤–∏–¥–µ—Ç—å!",
        "–ü—Ä–∏–≤–µ—Ç! –ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å —Å –∑–∞–¥–∞—á–∞–º–∏!",
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?"
    ],
    'thanks': [
        "üòä –í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–º–æ—á—å!",
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å –µ—â–µ!",
        "–†–∞–¥ –±—ã–ª –ø–æ–º–æ—á—å!",
        "–ù–µ –∑–∞ —á—Ç–æ! –ï—Å–ª–∏ —á—Ç–æ - —è —Ç—É—Ç!",
        "–°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ!"
    ],
    'farewell': [
        "üëã –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!",
        "–ü–æ–∫–∞! –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å —Å–∫–æ—Ä–µ–µ!",
        "–î–æ –≤—Å—Ç—Ä–µ—á–∏! –ë—É–¥—É –∂–¥–∞—Ç—å –≤–∞—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤!",
        "–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ! –ù–µ –ø—Ä–æ–ø–∞–¥–∞–π—Ç–µ!",
        "–ü–æ–∫–∞! –ï—Å–ª–∏ —á—Ç–æ - —è –Ω–∞ —Å–≤—è–∑–∏!"
    ],
    'unknown': [
        "ü§î –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é",
        "–ü–æ–∫–∞ –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —ç—Ç–æ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ –º–µ–Ω—é!",
        "–ù–µ —Å–æ–≤—Å–µ–º –ø–æ–Ω–∏–º–∞—é. –ú–æ–∂–µ—Ç, —Å–ø—Ä–æ—Å–∏—Ç–µ –ø–æ-–¥—Ä—É–≥–æ–º—É?",
        "–≠—Ç–æ –≤–Ω–µ –º–æ–µ–π –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ '–ü–æ–º–æ—â—å'",
        "–•–º... –õ—É—á—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã"
    ],
    'help': [
        "üìã –í–æ—Ç —á—Ç–æ —è —É–º–µ—é: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –∏ –∑–∞–¥–∞—á–∞–º–∏!",
        "–ü–æ–º–æ—â—å —É–∂–µ –∑–¥–µ—Å—å! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏",
        "–Ø –ø–æ–º–æ–≥—É! –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é",
        "–ì–æ—Ç–æ–≤ –ø–æ–º–æ—á—å! –ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–ª–∏ –∑–∞–¥–∞—á–∏?",
        "–°–ø—Ä–∞—à–∏–≤–∞–π—Ç–µ! –ú–æ–∏ —Ñ—É–Ω–∫—Ü–∏–∏: üë• –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏, ‚úÖ –∑–∞–¥–∞—á–∏, üìä —Å—Ç–∞—Ç—É—Å"
    ]
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.message.from_user
    user_id = user.id
    
    await update.message.reply_text(
        f"üöÄ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user.first_name}!",
        reply_markup=main_menu() if user_id != ADMIN_ID else admin_main_menu()
    )

def is_admin(user_id):
    return user_id == ADMIN_ID

async def handle_any_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.lower()
    user = update.message.from_user
    user_id = user.id
    
    logger.info(f"User {user.first_name} said: {update.message.text}")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è
    message_type = 'unknown'
    
    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    if any(word in text for word in ['–ø—Ä–∏–≤–µ—Ç', 'hello', 'hi', '–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π', '—Ö–∞–π', '–¥–æ–±—Ä—ã–π', '–Ω–∞—á–∞—Ç—å']):
        message_type = 'greeting'
    
    # –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç–∏
    elif any(word in text for word in ['—Å–ø–∞—Å–∏–±–æ', '–±–ª–∞–≥–æ–¥–∞—Ä—é', 'thanks', 'thank you', '–º–µ—Ä—Å–∏']):
        message_type = 'thanks'
    
    # –ü—Ä–æ—â–∞–Ω–∏—è
    elif any(word in text for word in ['–ø–æ–∫–∞', '–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è', 'bye', 'goodbye', '–≤—Å–µ–≥–æ', '—É–≤–∏–¥–∏–º—Å—è']):
        message_type = 'farewell'
    
    # –ü–æ–º–æ—â—å
    elif any(word in text for word in ['–ø–æ–º–æ—â—å', 'help', '—Å–ø—Ä–∞–≤–∫–∞', '–∫–æ–º–∞–Ω–¥—ã', '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å', '—Ñ—É–Ω–∫—Ü–∏–∏']):
        message_type = 'help'
    
    # –í–æ–ø—Ä–æ—Å—ã
    elif any(word in text for word in ['–∫–∞–∫', '–ø–æ—á–µ–º—É', '—á—Ç–æ', '–∫–æ–≥–¥–∞', '–≥–¥–µ', '–∫—Ç–æ', '–∑–∞—á–µ–º']):
        message_type = 'question'
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ (—Ç–æ—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è)
    original_text = update.message.text
    
    if original_text == "üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏":
        await update.message.reply_text("üë• –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...")
        return
    
    elif original_text == "‚úÖ –ó–∞–¥–∞—á–∏":
        await update.message.reply_text("‚úÖ –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á...")
        return
    
    elif original_text == "üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã":
        await update.message.reply_text("üìä –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ! üü¢")
        return
    
    elif original_text == "üìã –ü–æ–º–æ—â—å":
        await update.message.reply_text("üìã –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
        return
    
    elif original_text == "‚ûï –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
        await update.message.reply_text("üë§ –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è: /add_user –ò–º—è Email")
        return
    
    elif original_text == "‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É":
        await update.message.reply_text("‚úÖ –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è: /add_task –ó–∞–≥–æ–ª–æ–≤–æ–∫ –û–ø–∏—Å–∞–Ω–∏–µ")
        return
    
    # –ê–¥–º–∏–Ω—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
    elif original_text == "üõ†Ô∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å" and is_admin(user_id):
        await update.message.reply_text("üõ†Ô∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å:", reply_markup=admin_menu())
        return
    
    elif original_text in ["‚úÖ –ü—Ä–∏–Ω—è—Ç—å", "‚ùå –û—Ç–∫–∞–∑", "üë• –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", 
                          "‚úÖ –í—Å–µ –∑–∞–¥–∞—á–∏", "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã", "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∫—ç—à"] and is_admin(user_id):
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –∫–Ω–æ–ø–æ–∫
        pass
    
    elif original_text == "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        await update.message.reply_text("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", 
                                      reply_markup=main_menu() if user_id != ADMIN_ID else admin_main_menu())
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    if message_type == 'greeting':
        response = random.choice(RESPONSES['greeting'])
        await update.message.reply_text(response)
    
    elif message_type == 'thanks':
        response = random.choice(RESPONSES['thanks'])
        await update.message.reply_text(response)
    
    elif message_type == 'farewell':
        response = random.choice(RESPONSES['farewell'])
        await update.message.reply_text(response)
    
    elif message_type == 'help':
        response = random.choice(RESPONSES['help'])
        await update.message.reply_text(response + "\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–∞–∑–¥–µ–ª—ã:\n‚Ä¢ üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏\n‚Ä¢ ‚úÖ –ó–∞–¥–∞—á–∏\n‚Ä¢ üìä –°—Ç–∞—Ç—É—Å\n‚Ä¢ üìã –ü–æ–º–æ—â—å")
    
    elif message_type == 'question':
        await update.message.reply_text(
            "‚ùì –•–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å!\n\n"
            "–Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞:\n"
            "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ üë•\n"
            "‚Ä¢ –†–∞–±–æ—Ç–µ —Å –∑–∞–¥–∞—á–∞–º–∏ ‚úÖ\n"
            "‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ —Å–∏—Å—Ç–µ–º—ã üìä\n\n"
            "–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –≤ —Ä–∞–º–∫–∞—Ö —ç—Ç–∏—Ö —Ç–µ–º –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é!"
        )
    
    else:
        # –î–ª—è –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        response = random.choice(RESPONSES['unknown'])
        await update.message.reply_text(
            f"{response}\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n"
            "‚Ä¢ –ù–∞–ø–∏—Å–∞—Ç—å '–ø—Ä–∏–≤–µ—Ç' üëã\n"
            "‚Ä¢ –°–ø—Ä–æ—Å–∏—Ç—å '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å?' ü§î\n"
            "‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é üìã\n"
            "‚Ä¢ –ù–∞–ø–∏—Å–∞—Ç—å '–ø–æ–º–æ—â—å' –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥"
        )

def main():
    application = Application.builder().token(BOT_TOKEN).build()
    
    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_any_message))
    
    logger.info("ü§ñ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –¢–µ–ø–µ—Ä—å –æ–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –õ–Æ–ë–´–ï —Å–æ–æ–±—â–µ–Ω–∏—è!")
    print("üéØ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ: –Ω–∞–ø–∏—à–∏—Ç–µ '–ø—Ä–∏–≤–µ—Ç', '–∫–∞–∫ –¥–µ–ª–∞?', '—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å?'")
    
    application.run_polling()

if __name__ == "__main__":
    main()
